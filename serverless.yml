type: sb10-rest-api

components:
  gamesDb:
    type: aws-dynamodb
    inputs:
      region: us-east-1
      tables:
        - name: games
          hashKey: Sport
          rangeKey: id
          indexes:
            - name: gameIdIndex
              type: global
              hashKey: Sport
              rangeKey: id
          schema:
            id: number
            Endroit: string
            DateHeure: date
            EquipeLoc:
              type: string
              options:
                required: true
            EquipeVis:
              type: string
              options:
                required: true
            Sport:
              type: string
              options:
                required: true
            Categorie: string
            PtsLoc:
              type: number
              options:
                default: 0
            PtsVis:
              type: number
              options:
                default: 0
            Periode:
              type: number
              options:
                default: 0
            Minute:
              type: number
              options:
                default: 0
            Seconde:
              type: number
              options:
                default: 0
            Balles:
              type: number
              options:
                default: 0
            Prises:
              type: number
              options:
                default: 0
            Retraits:
              type: number
              options:
                default: 0
            Aubaton: string
            Surlesbuts: string
            Etat: string
          options:
            timestamps: true
  createGame:
    type: aws-lambda
    inputs:
      memory: 512
      timeout: 10
      handler: games.create
      root: ./code
      description: "Create new game."
      env:
        gamesTableName: games
  getGame:
    type: aws-lambda
    inputs:
      memory: 512
      timeout: 10
      handler: games.get
      root: ./code
      description: "Get a single game."
      env:
        gamesTableName: games
  listGames:
    type: aws-lambda
    inputs:
      memory: 512
      timeout: 10
      handler: games.list
      root: ./code
      description: "List games"
      env:
        gamesTableName: games
  getMaxId:
    type: aws-lambda
    inputs:
      memory: 512
      timeout: 10
      handler: games.getMaxId
      root: ./code
      description: "Get game max Id."
      env:
        gamesTableName: games       
  gamesApi:
    type: rest-api
    inputs:
      gateway: aws-apigateway
      routes:
        /games:
          post:
            function: ${createGame}
            cors: true
          get:
            function: ${listGames}
            cors: true
          /{sport}:
            /{id}:
              get:
                function: ${getGame}
                cors: true
          /getMaxId:
            get:
              function: ${getMaxId}
              cors: true


